// ADD R - 1110_000_0100_0_AAAA_DDDD_0000_0000_BBBB
// ADD I - 1110_001_0100_0_AAAA_DDDD_0000_IIII_IIII
// SUB R - 1110_000_0010_0_AAAA_DDDD_0000_0000_BBBB
// SUB I - 1110_001_0010_0_AAAA_DDDD_0000_IIII_IIII
// CMP R - 1110_000_0010_1_AAAA_DDDD_0000_0000_BBBB
// CMP I - 1110_001_0010_1_AAAA_DDDD_0000_IIII_IIII
// AND   - 1110_000_0000_0_AAAA_DDDD_0000_0000_BBBB
// ORR   - 1110_000_1100_0_AAAA_DDDD_0000_0000_BBBB
// LDR   - 1110_010_1100_1_AAAA_DDDD_IIII_IIII_IIII
// STR   - 1110_010_1100_0_AAAA_DDDD_IIII_IIII_IIII
// COND_1010_IIII_IIII_IIII_IIII_IIII_IIII

// Equal            - COND = 0000 
// Not Equal        - COND = 0001 
// Greater or Equal - COND = 1010 
// Greater          - COND = 1100 
// Less or Equal    - COND = 1101 
// Less             - COND = 1011 

11100000010011110000000000001111	//  MAIN	SUB  R0 R15 R15
11100010100000000001000000000001	//  		ADD  R1 R0 #1
11100001100000000010000000000001	//  		ORR  R2 R0 R1
11100010100000000010000000000010	//  		ADD  R2 R0 #2
11100010010100100000000000000000	//  		SUBS R0 R2 #0
00001010000000000000000000000001		//  		BEQ  TAG1
11100000000000100010000000000000	//  		AND  R2 R2 R0
11100000000000100001000000000000	//  		AND  R1 R2 R0
11100000100000011001000000000000	//  TAG1	ADD  R9 R1 R0
11100101100000001001000000001001	//  		STR  R9 [R0, #9]
11100101100100000011000000001001	//  		LDR  R3 [R0, #9]
11100000000000110010000000000010	//  		AND  R2 R3 R2